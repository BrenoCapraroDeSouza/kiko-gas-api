generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  RESALE
  CLIENT
}

type Address {
  state        String
  city         String
  neighborhood String
  publicPlace  String
  number       String
  ie           String
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  email    String   @unique
  password String
  role     UserRole

  resale   Resale?  @relation("UserResale")
  client   Client?  @relation("UserClient")
}

model Resale {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  address  Address
  phone    String
  cnpj     String

  user     User     @relation("UserResale", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userId   String   @unique @db.ObjectId

  clients  Client[]
  devices  Device[]
}

model Client {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  addresses   Address[]
  phone       String
  cpfcnpj     String

  user        User         @relation("UserClient", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userId      String       @unique @db.ObjectId

  resale      Resale?      @relation(fields: [resaleId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  resaleId    String?      @db.ObjectId

  devices     Device[]     
}

model Device {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  tare      Float
  weight    Float
  gas       Float
  price     Float // Preço padrão do dispositivo

  resale    Resale @relation(fields: [resaleId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  resaleId  String @db.ObjectId

  client    Client? @relation(fields: [clientId], references: [id], onDelete: SetNull, onUpdate: NoAction)
  clientId  String? @db.ObjectId

  devicePrices DevicePrice[]
}

model DevicePrice {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  price     Float
  client    Client  @relation(fields: [clientId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  clientId  String  @db.ObjectId

  device    Device  @relation(fields: [deviceId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  deviceId  String  @db.ObjectId
}