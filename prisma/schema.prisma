// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// for postgreSQL
// enum UserType {
//   CLIENT
//   RESALE
// }

model User { 
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  userType String
  
  Resale Resale?
  Client Client?

  @@map("users")
}

model Address {
  id           String   @id @default(cuid())
  idClient     String? @unique
  idResale     String? @unique
  state        String
  city         String
  neighborhood String
  publicPlace  String
  number       String
  ie           String?
  client       Client?  @relation(fields: [idClient], references: [id])
  resale       Resale?

  @@map("addresses")
}

model Client {
  id        String     @id @default(cuid())
  resaleId  String?     @unique  
  userId    String      @unique
  name      String
  phone     String
  cpfcnpj   String
  addresses Address[]
  devices   Device[]
  resale    Resale?     @relation(fields: [resaleId], references: [id])
  user      User        @relation(fields: [userId], references: [id])
  @@map("clients")
}

model Device {
  id        String  @id @default(cuid())
  idClient  String
  idResale  String
  tare      Float
  weight    Float
  gas       Float
  signals   Signal[]
  client    Client  @relation(fields: [idClient], references: [id])
  resale    Resale  @relation(fields: [idResale], references: [id])

  @@map("devices")
}

model Resale {
  id        String   @id @default(cuid())
  userId   String   @unique
  addressId String   @unique 
  name      String
  phone     String
  cnpj   String
  clients   Client[] 
  devices   Device[]
  address   Address  @relation(fields: [addressId], references: [id])
  user     User     @relation(fields: [userId], references: [id])

  @@map("resales")
}

model Signal {
  id          String   @id @default(cuid())
  idDevice    String
  date        DateTime @default(now())
  isFinished  Boolean
  device      Device   @relation(fields: [idDevice], references: [id])

  @@map("signals")
}